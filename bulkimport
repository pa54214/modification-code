$lang['caste'] = "Registration No";	

**princecollege/application/views/student/importp.php
download that  view file
----------------------------------------------------model update----------------------------------------------------------
princecollege/application/models/Student_model.php

first
   public function check_adm_exists($admission_no)
    {
        $this->db->where('admission_no',$admission_no);
        $query = $this->db->get('students');
       // echo $query->num_rows();
        if ($query->num_rows() > 0) {
           // return $query->num_rows();
           
            return true;
        } else {
         
             return false;
        }
    }

second
  public function updateroll_excel($adm_no,$roll_no,$reg_no)
    {
      //  echo $adm_no;
      //  echo "<br>";
      //  echo $roll_no;
      // echo "<br>";
      //  echo $reg_no;
      //   echo "<br>";
        $data = array(
        'roll_no' => $roll_no,
        'cast'=>$reg_no
          );
        // echo '<pre>';print_r($data);exit;
        //var_dump( isset($adm_no));
        if (isset($adm_no)) { 
            $this->db->where('admission_no', $adm_no);
            $this->db->update('students', $data);
            $message   = UPDATE_RECORD_CONSTANT . " On students Admisssion_No " . $adm_no;
            $action    = "Update";
            $record_id = $insert_id = $adm_no;
            $this->log($message, $record_id, $action);
            return true;
        }
    }
--------------------------------------------------------------------------------------controller-------------------------------------------------------------------------------
**princecollege/application/controllers/Student.php
public function importp()
    {
        if (!$this->rbac->hasPrivilege('import_student', 'can_view')) {
            access_denied();
        }
        $data['title']      = $this->lang->line('import_student');
        $data['title_list'] = $this->lang->line('recently_added_student');
        $session            = $this->setting_model->getCurrentSession();
        $userdata           = $this->customlib->getUserData();
        $category = $this->category_model->get();
        // ==============================  change by sonu 07/03/2024 ==========================================
        $fields = array('admission_no', 'roll_no','reg_no');
        //  ====================================================================================================
        $data["fields"]       = $fields;
        $data['categorylist'] = $category;
        $this->form_validation->set_rules('file', $this->lang->line('image'), 'callback_handle_csv_upload');
        if ($this->form_validation->run() == false) {
            $this->load->view('layout/header', $data);
            $this->load->view('student/importp', $data);
            $this->load->view('layout/footer', $data);
        } else {
             $session = $this->setting_model->getCurrentSession();
            if (isset($_FILES["file"]) && !empty($_FILES['file']['name'])) {
                $ext = pathinfo($_FILES['file']['name'], PATHINFO_EXTENSION);
                if ($ext == 'csv') {
                    $file = $_FILES['file']['tmp_name'];
                    $this->load->library('CSVReader');
                    $result = $this->csvreader->parse_file($file);
                    if (!empty($result)) {
                        $rowcount = 0;
                        for ($i = 1; $i <= count($result); $i++) {
                            $student_data[$i] = array();
                            $n                = 0;
                            foreach ($result[$i] as $key => $value) {
                                $student_data[$i][$fields[$n]] = $this->encoding_lib->toUTF8($result[$i][$key]);
                                $student_data[$i]['is_active'] = 'yes';
                                 $n++;
                            }
                            $adm_no                            = $student_data[$i]["admission_no"];
                            $roll_no                           = $student_data[$i]["roll_no"];
                            $reg_no                            = $student_data[$i]["reg_no"];
                                $admission_no_exists = $this->student_model->check_adm_exists($adm_no );
                               if ($admission_no_exists) {
                                   $insert_id = $this->student_model->updateroll_excel($adm_no ,$roll_no,$reg_no);
                                } else {
                                 $insert = "";
                               //  $this->session->set_flashdata('msg', '<div class="alert alert-success text-center">' .   "not exits" . '</div>');
                                }
                           //-------------------------
                            if (!empty($insert_id)) {
                                $temp              = $insert_id;
                                $data['csvData'] = $result;
                                $this->session->set_flashdata('msg', '<div class="alert alert-success text-center">' . $this->lang->line('students_imported_successfully') . '</div>');
                                $rowcount++;
                                $this->session->set_flashdata('msg', '<div class="alert alert-success text-center">' . $this->lang->line('total') . ' ' . count($result) . $this->lang->line('records_found_in_csv_file_total') . $rowcount . ' ' . $this->lang->line('records_imported_successfully') . '</div>');
                            } else {
                                $this->session->set_flashdata('msg', '<div class="alert alert-danger text-center">' . "record_doesn't_exist". '</div>');
                            }
                        }//end of for loop
                    } else {

                        $this->session->set_flashdata('msg', '<div class="alert alert-danger text-center">' . $this->lang->line('no_record_found') . '</div>');
                    }
                } else {

                    $this->session->set_flashdata('msg', '<div class="alert alert-danger text-center">' . $this->lang->line('please_upload_csv_file_only') . '</div>');
                }
            }
            redirect('student/importp');
        }
    }

***controller/student/exportformat
//$filepath = "./backend/import/import_student_sample_filee.csv"; //for excel upload 

public function exportformatp()
    {
        $this->load->helper('download');
        $filepath = "./backend/import/import_student_sample_filee.csv";
        $data     = file_get_contents($filepath);
        $name     = 'import_student_sample_file.csv';

        force_download($name, $data);
    }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


databse me sidemenu added
lanuage file me name added 


allign work remaing 


for utr

https://srv907-files.hstgr.io/1f9a73f476ca4e55/files/public_html/princecollege/application/controllers/Studentfee.php

https://princecollege.classmentor.in/studentfee/searchpaymentutrp


apply valiation for image
    $this->form_validation->set_rules('fifth_doc', $this->lang->line('image'), 'callback_handle_uploadfordoc[fifth_doc]');
    $this->form_validation->set_rules('guardian_phone', $this->lang->line('guardian_phone'), 'trim|required|xss_clean');

10082063544



  // Get the file details
    if (isset($_FILES['fifth_doc']) && $_FILES['fifth_doc']['error'] == 0) {
        // Maximum file size allowed (50 KB)
        $max_size = 50 * 1024; // 50 KB in bytes
        
        // Check file size
        if ($_FILES['fifth_doc']['size'] > $max_size) {
            $this->form_validation->set_message('callback_handle_uploadfordoc', 'The file size must not exceed 50 KB.');
            return FALSE; // Validation fails if file size exceeds 50 KB
        }

}




to show exits duplicay of utr number
 $this->session->set_flashdata('msg', '<div class="alert alert-success text-center">' . $this->lang->line('students_imported_successfully') . '</div>');


----------------------------------------------------------------------------------------------------------------------------------------

for sidemenu

INSERT INTO `sidebar_sub_menus` (`id`, `sidebar_menu_id`, `menu`, `key`, `lang_key`, `url`, `level`, `access_permissions`, `permission_group_id`, `activate_controller`, `activate_methods`, `addon_permission`, `is_active`, `created_at`) VALUES
(194, 2, 'roll_import', NULL, 'roll_import', 'student/importp', 10, '(\'import_student\', \'can_view\')', NULL, 'student', 'importp', NULL, 1, '2025-03-26 12:04:46')
;

INSERT INTO `sidebar_sub_menus` (`id`, `sidebar_menu_id`, `menu`, `key`, `lang_key`, `url`, `level`, `access_permissions`, `permission_group_id`, `activate_controller`, `activate_methods`, `addon_permission`, `is_active`) VALUES
(194, 2, 'roll_import', NULL, 'roll_import', 'student/importp', 10, '(\'import_student\', \'can_view\')', NULL, 'student', 'importp', NULL, 1)
;

-------------------------------------------------------------------------------------------------------------------------
$lang['roll_import'] = "Bulk import";
